service: aws-serverles-api-lambda-cors

frameworkVersion: ">=1.0.0 <2.0.0"

plugins:
  - serverless-latest-layer-version # for developers
  - serverless-pseudo-parameters # for developers
  - serverless-offline # for developers

custom:
  serverless-offline:
    httpPort: 9090

package:
  exclude:
    - "**/node_modules/**"  # all node_modules folder
    - "**/*.test.*"  # all test files
    - ".dynamodb/**"
    - ".serverless/**"
  include:
    - src/module/index.js

provider:
  name: aws
  runtime: nodejs12.x # node package version
  stage: ${opt:stage, 'dev'} # default invironment set to (dev = "development stage")
  region: ${opt:region, 'us-east-1'} # region where it will be deploy
  deploymentBucket:
    name: deploy.${self:provider.region}.nipahut.club # S3 bucket name
  environment:
    DEPLOYMENT_STAGE: ${self:provider.stage} # staging environment dev, test or prod
    ALLOWED_ORIGINS: '*.nipahut.club'
    AUTH0_DOMAIN: hzp41c93 # auth0 domain
    NODE_PATH: './:/opt/node_modules'

  iamRoleStatements:
    - Effect: Allow
      Action:
        - lambda:InvokeFunction
      Resource:
        - arn:aws:lambda:${self:provider.region}:#{AWS::AccountId}:function:${self:service}-${self:provider.stage}-*

resources:
  Resources:
    GatewayResponseDefault4XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'http://localhost:3000'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'Authorization'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'

functions:
  corsHandler:
    description: cors handler response
    handler: src/module/index.handler
    layers:
      - arn:aws:lambda:${self:provider.region}:#{AWS::AccountId}:layer:aws-serverles-layers-module-${self:provider.stage}:latest
    events:
      - http:
          path: /cors
          method: post
          authorizer: auth0
          cors:
            origin: 'http://localhost:3000'
            headers:
              - Content-Type
              - Authorization
            allowCredentials: true

  auth0:
    description: user authorization
    handler: src/module/auth0/auth.handler
    layers:
      - arn:aws:lambda:${self:provider.region}:#{AWS::AccountId}:layer:aws-serverles-layers-module-${self:provider.stage}:latest